
package com.foriba.esmm;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "ForibaESmmServices", targetNamespace = "http://foriba.com/eSmm/", wsdlLocation = "wsdl/com/foriba/esmm/ESmmService/ESmmService.wsdl")
public class ForibaESmmServices extends Service {

	private final static URL FORIBAESMMSERVICES_WSDL_LOCATION;
	private final static WebServiceException FORIBAESMMSERVICES_EXCEPTION;
	private final static QName FORIBAESMMSERVICES_QNAME = new QName("http://foriba.com/eSmm/", "ForibaESmmServices");

	static {
		URL url = null;
		WebServiceException e = null;
		try {
			URL tempUrl = ForibaESmmServices.class.getClassLoader().getResource("wsdl/com/foriba/esmm/ESmmService/ESmmService.wsdl");
			url = new URL(tempUrl.getProtocol(), tempUrl.getHost(), tempUrl.getPort(), tempUrl.getFile());
		} catch (MalformedURLException ex) {
			e = new WebServiceException(ex);
		} 
		
		FORIBAESMMSERVICES_WSDL_LOCATION = url;
		FORIBAESMMSERVICES_EXCEPTION = e;
	}

	public ForibaESmmServices() {
		super(__getWsdlLocation(), FORIBAESMMSERVICES_QNAME);
	}

	public ForibaESmmServices(WebServiceFeature... features) {
		super(__getWsdlLocation(), FORIBAESMMSERVICES_QNAME, features);
	}

	public ForibaESmmServices(URL wsdlLocation) {
		super(wsdlLocation, FORIBAESMMSERVICES_QNAME);
	}

	public ForibaESmmServices(URL wsdlLocation, WebServiceFeature... features) {
		super(wsdlLocation, FORIBAESMMSERVICES_QNAME, features);
	}

	public ForibaESmmServices(URL wsdlLocation, QName serviceName) {
		super(wsdlLocation, serviceName);
	}

	public ForibaESmmServices(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
		super(wsdlLocation, serviceName, features);
	}

	/**
	 * 
	 * @return returns ForibaESmmServicesPort
	 */
	@WebEndpoint(name = "ForibaESmmServicesPort")
	public ForibaESmmServicesPort getForibaESmmServicesPort() {
		return super.getPort(new QName("http://foriba.com/eSmm/", "ForibaESmmServicesPort"),
				ForibaESmmServicesPort.class);
	}

	/**
	 * 
	 * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure
	 *                 on the proxy. Supported features not in the
	 *                 <code>features</code> parameter will have their default
	 *                 values.
	 * @return returns ForibaESmmServicesPort
	 */
	@WebEndpoint(name = "ForibaESmmServicesPort")
	public ForibaESmmServicesPort getForibaESmmServicesPort(WebServiceFeature... features) {
		return super.getPort(new QName("http://foriba.com/eSmm/", "ForibaESmmServicesPort"),
				ForibaESmmServicesPort.class, features);
	}

	private static URL __getWsdlLocation() {
		if (FORIBAESMMSERVICES_EXCEPTION != null) {
			throw FORIBAESMMSERVICES_EXCEPTION;
		}
		return FORIBAESMMSERVICES_WSDL_LOCATION;
	}

}
